<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Users Management</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
      :root {
        --primary: #009e61;
        --orange: #ff7849;
        --white: #ffffff;
        --dark: #1a1a1a;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
      }

      body {
        background-color: #f5f5f5;
        padding: 2rem;
      }

      h1 {
        color: var(--dark);
        margin-bottom: 2rem;
      }

      .table-container {
        width: 100%;
        overflow-x: auto;
        background: var(--white);
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }

      table {
        border-collapse: collapse;
        width: 100%;
        min-width: 800px;
      }

      thead {
        position: sticky;
        top: 0;
        background: var(--white);
        z-index: 10;
      }

      th {
        background-color: var(--primary);
        color: var(--white);
        font-weight: 500;
        text-transform: uppercase;
        font-size: 0.85rem;
        padding: 1rem;
        text-align: left;
      }

      td {
        padding: 0.75rem 1rem;
        border-bottom: 1px solid #eee;
        max-height: 30px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      tr:hover {
        background-color: #f8f8f8;
      }

      .search-input {
        width: 100%;
        max-width: 300px;
        padding: 0.75rem 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-bottom: 1rem;
        font-family: "Poppins", sans-serif;
      }

      .btn {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s ease;
      }

      .btn-primary {
        background-color: var(--primary);
        color: var(--white);
      }

      .btn-danger {
        background-color: var(--orange);
        color: var(--white);
      }

      .btn:hover {
        opacity: 0.9;
        transform: translateY(-1px);
      }

      /* modal style */
      .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
      }

      .modal-content {
        background-color: var(--white);
        margin: 10% auto;
        padding: 2rem;
        border-radius: 8px;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
      }

      .modal-header {
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 1.5rem;
        font-size: 1.25rem;
      }

      .modal-body input {
        width: 100%;
        padding: 0.75rem;
        margin: 0.5rem 0 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
      }

      .modal-actions {
        margin-top: 1.5rem;
        text-align: right;
      }

      .modal-actions button {
        margin-left: 1rem;
      }

      /* Custom Notification */
      .notification {
        position: fixed;
        top: 1rem;
        right: 1rem;
        padding: 1rem 1.5rem;
        border-radius: 4px;
        background: var(--white);
        color: var(--dark);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        transform: translateX(120%);
        transition: transform 0.3s ease;
        z-index: 1100;
      }

      .notification.success {
        border-left: 4px solid var(--primary);
      }

      .notification.error {
        border-left: 4px solid var(--orange);
      }

      .notification.show {
        transform: translateX(0);
      }
    </style>
  </head>
  <body>
    <h1>Manajemen Users</h1>

    <!-- search input -->
    <input
      type="text"
      id="searchInput"
      class="search-input"
      placeholder="Cari berdasarkan username...."
    />

    <!-- table data users -->
    <div class="table-container">
      <table id="usersTable">
        <thead>
          <tr>
            <th><input type="checkbox" id="selectAll" /></th>
            <th>ID</th>
            <th>Username</th>
            <th>Password</th>
            <th>Role</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% users.forEach((user, index) => { %>
          <tr data-id="<%= user.id%>">
            <td>
              <input
                type="checkbox"
                class="rowCheckbox"
                data-id="<%= user.id %>"
              />
            </td>
            <td><%= user.id %></td>
            <td class="username"><%= user.username%></td>
            <td class="password"><%= user.password%></td>
            <td class="role"><%= user.role%></td>
            <td>
              <button class="editBtn btn btn-primary" data-id="<%= user.id%>">
                Edit
              </button>
            </td>
          </tr>
          <% }); %>
        </tbody>
      </table>
    </div>

    <!-- tombol untuk menghapus data yang dipilih -->
    <br />
    <button id="deleteSelectedBtn" class="btn btn-danger">
      Delete Selected
    </button>

    <!-- notification container -->
    <div id="notification" class="notification"></div>

    <!-- modal edit user -->
    <div class="modal" id="editModal">
      <div class="modal-content">
        <div class="modal-header">Edit User</div>
        <div class="modal-body">
          <input type="hidden" id="editUserId" />
          <div>
            <label>Username:</label>
            <input type="text" id="editUsername" />
          </div>
          <div>
            <label>Password:</label>
            <input type="text" id="editPassword" />
          </div>
          <div>
            <label>Role:</label>
            <input type="text" id="editRole" />
          </div>
        </div>
        <div class="modal-actions">
          <button id="editCancelBtn" class="btn">Cancel</button>
          <button id="editConfirmBtn" class="btn btn-primary">Confirm</button>
        </div>
      </div>
    </div>

    <!-- modal konfirmasi hapus -->
    <div class="modal" id="deleteModal">
      <div class="modal-content">
        <div class="modal-header">Confirm Delete</div>
        <div class="modal-body">Do you want to delete the selected data?</div>
        <div class="modal-actions">
          <button id="deleteCancelBtn" class="btn">Cancel</button>
          <button id="deleteConfirmBtn" class="btn btn-danger">Delete</button>
        </div>
      </div>
    </div>

    <script>
      // --------------------------------------
      //FUNGSI SEARCH DENGAN DEBOUNCE 1 DETIK
      let debounceTimer;
      const searchInput = document.getElementById("searchInput");
      const usersTableBody = document.querySelector("#usersTable tbody");

      searchInput.addEventListener("keyup", function () {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(() => {
          const query = searchInput.value;
          fetch("/database/users/search?q=" + encodeURIComponent(query))
            .then((response) => response.json())
            .then((data) => updateTable(data))
            .catch((err) => console.error(err));
        }, 1000);
      });

      function updateTable(users) {
        usersTableBody.innerHTML = "";
        users.forEach((user, index) => {
          const row = document.createElement("tr");
          row.setAttribute("data-id", user.id);
          row.innerHTML = `
            <td><input type="checkbox" class="rowCheckbox" data-id="${user.id}" /></td>
            <td>${user.id}</td>
            <td class="username">${user.username}</td>
            <td class="password">${user.password}</td>
            <td class="role">${user.role}</td>
            <td><button class="editBtn btn btn-primary" data-id="${user.id}">Edit</button></td>
          `;
          usersTableBody.appendChild(row);
        });
      }

      // --------------------------------------
      //FUNGSI SELECT ALL CHECKBOX
      document
        .getElementById("selectAll")
        .addEventListener("change", function () {
          const checked = this.checked;
          document
            .querySelectorAll(".rowCheckbox")
            .forEach((chk) => (chk.checked = checked));
        });

      // --------------------------------------
      //FUNGSI DELETE SELECTED DENGAN MODAL KONFIRMASI
      document
        .getElementById("deleteSelectedBtn")
        .addEventListener("click", () => {
          const selectedIds = Array.from(
            document.querySelectorAll(".rowCheckbox")
          )
            .filter((checkbox) => checkbox.checked)
            .map((checkbox) => checkbox.getAttribute("data-id"));

          if (selectedIds.length === 0) {
            showNotification("No data selected", "error");
            return;
          }

          // tampilkan model delete custom
          const deleteModal = document.getElementById("deleteModal");
          deleteModal.style.display = "block";

          // tombol konfirmasi hapus
          document.getElementById("deleteConfirmBtn").onclick = function () {
            fetch("/database/users/delete", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ ids: selectedIds }),
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  selectedIds.forEach((id) => {
                    const row = document.querySelector(`tr[data-id="${id}"]`);
                    if (row) {
                      row.remove();
                    }
                  });
                } else {
                  showNotification(
                    data.message || "Failed to delete data",
                    "error"
                  );
                }
                deleteModal.style.display = "none";
              });
          };

          // tombol batalkan modal hapus
          document.getElementById("deleteCancelBtn").onclick = function () {
            deleteModal.style.display = "none";
          };
        });

      // --------------------------------------
      //FUNGSI EDIT: TAMPILKAN MODAL EDIT
      document.addEventListener("click", function (e) {
        if (e.targe || e.target.classList.contains("editBtn")) {
          const userId = e.target.getAttribute("data-id");
          const row = document.querySelector(`tr[data-id="${userId}"]`);
          const username = row.querySelector(".username").textContent;
          const password = row.querySelector(".password").textContent;
          const role = row.querySelector(".role").textContent;

          document.getElementById("editUserId").value = userId;
          document.getElementById("editUsername").value = username;
          document.getElementById("editPassword").value = password;
          document.getElementById("editRole").value = role;

          document.getElementById("editModal").style.display = "block";
        }
      });

      // --------------------------------------
      //BATALKAN MODAL EDIT
      document
        .getElementById("editCancelBtn")
        .addEventListener("click", function () {
          document.getElementById("editModal").style.display = "none";
        });

      // --------------------------------------
      //KONFIRMASI EDIT MELALUI AJAX
      document
        .getElementById("editConfirmBtn")
        .addEventListener("click", function () {
          const userId = document.getElementById("editUserId").value;
          const username = document.getElementById("editUsername").value;
          const password = document.getElementById("editPassword").value;
          const role = document.getElementById("editRole").value;

          fetch("/database/users/edit", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ id: userId, username, password, role }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                // perbarui data pada baris tabel
                const row = document.querySelector(`tr[data-id="${userId}"]`);
                row.querySelector(".username").textContent = username;
                row.querySelector(".password").textContent = password;
                row.querySelector(".role").textContent = role;
              } else {
                showNotification(data.message || "Gagal update data", "error");
              }
              document.getElementById("editModal").style.display = "none";
            })
            .catch((err) => {
              console.error(err);
              document.getElementById("editModal").style.display = "none";
            });
        });
      // Fungsi untuk menampilkan notifikasi
      function showNotification(message, type = "success") {
        const notification = document.getElementById("notification");
        notification.textContent = message;
        notification.className = `notification ${type} show`;

        setTimeout(() => {
          notification.classList.remove("show");
        }, 3000);
      }
    </script>
  </body>
</html>
